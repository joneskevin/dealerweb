<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context-3.0.xsd    
       http://www.springframework.org/schema/tx     
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
       http://www.springframework.org/schema/mvc     
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
       http://www.springframework.org/schema/aop     
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
      ">
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list><value>text/html;charset=UTF-8</value></list>
		</property>
	</bean>
    <bean id="myConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
            	<bean class="com.ava.util.converter.IntegerConverter" /> 
            	<bean class="com.ava.util.converter.LongConverter" /> 
            	<bean class="com.ava.util.converter.FloatConverter" /> 
            	<bean class="com.ava.util.converter.DateTimeConverter" /> 
            	<bean class="com.ava.util.converter.IntArrayConverter" /> 
	        </list>
	    </property> 
	</bean>
<!--	
	<mvc:annotation-driven/> 会自动注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个实例
	这样就没有机会给它注入interceptors了。
	其相当于下面的配置：
-->
<!--	激活@RequestMapping等注解-->
<!--	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>-->
<!--	激活@PathVariable等注解-->
<!--	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />    <!-- 注册JSON Converter -->
			</list>
		</property>
        <property name="webBindingInitializer">
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="conversionService" ref="myConversionService"/>
				     <!-- <property name="validator" ref="myValidator"/> -->
            </bean>
        </property>
    </bean>
    
	<context:component-scan base-package="com.ava.api.controller"/>
    <context:component-scan base-package="com.ava.back.controller"/>
    <context:component-scan base-package="com.ava.baseCommon.controller"/>
    <context:component-scan base-package="com.ava.baseHelp.controller"/>
    <context:component-scan base-package="com.ava.baseSystem.controller"/>
    <context:component-scan base-package="com.ava.dealer.controller"/>
    <context:component-scan base-package="com.ava.gateway.protocol"/>
    <context:component-scan base-package="com.ava.admin.controller"/>
    
	                                      
	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
		<!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑-->
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
	</bean>

<!-- 最大尺寸为100MB,如果配置了文件大小就需要配置异常信息控制,超出上传文件限制时会抛出MaxUploadSizeExceededException -->
<!-- 采用懒加载办法  在程序中判断大小是否超过100M -->
	
	<bean id="multipartResolver"  
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  

		<property name="resolveLazily" value="true"/>
<!-- 	    <property name="maxUploadSize" value="104857600"/> -->
	</bean>
	
	
	<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到error_fileupload.jsp页面 --> 
	<bean class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver"/>   
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	    <property name="order" value="0"/>  <!-- 设置该异常处理在DefaultHandlerExceptionResolver之前进行处理 -->
	    <property name="defaultErrorView" value="pub/errorTip"/>
	    <property name="exceptionAttribute" value="javax.servlet.error.exception"/>
	    <property name="defaultStatusCode" value="500"/>
        <property name="exceptionMappings">  
            <props>  
                <prop  key="org.springframework.web.multipart.MaxUploadSizeExceededException">/pub/error_fileupload</prop>  
            </props>  
        </property>
        <property name="warnLogCategory">
            <value>org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver</value>
        </property>
    </bean> 
     
	
<!--	<mvc:annotation-driven/>如果配置了，DefaultAnnotationHandlerMapping的配置就不起作用了-->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
     	<property name="interceptors">
         	<list>
				<!-- 拦截器 -->
                <bean class="com.ava.servlet.interceptor.Log4BaseInteceptor" />
                <bean class="com.ava.servlet.interceptor.Log4BackInteceptor" />
         	</list>
     	</property>
	</bean>
	<bean id="userTokenService" class="com.ava.dealer.service.impl.UserTokenService" />
</beans>